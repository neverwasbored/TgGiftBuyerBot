# test_gift_filter.py
import asyncio
import aiohttp
from api.gifts import GiftsApi
from config import load_config

async def test_gift_filtering():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é unlimited –ø–æ–¥–∞—Ä–∫–æ–≤
    """
    config = load_config()
    gifts_api = GiftsApi()
    
    print("üîç Testing gift filtering...\n")
    
    async with aiohttp.ClientSession() as session:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø–æ–¥–∞—Ä–∫–∏
        all_gifts = await gifts_api.aio_get_available_gifts(session)
        
        if not all_gifts:
            print("‚ùå No gifts received from API")
            return
        
        print(f"üìä Total gifts from API: {len(all_gifts)}")
        
        # –§–∏–ª—å—Ç—Ä—É–µ–º
        limited_gifts = []
        unlimited_gifts = []
        
        for gift in all_gifts:
            gift_id = gift.get('id')
            price = gift.get('star_count')
            total = gift.get('total_count')
            remaining = gift.get('remaining_count')
            emoji = gift.get('sticker', {}).get('emoji', 'üéÅ')
            
            if total is None or remaining is None:
                unlimited_gifts.append({
                    'id': gift_id,
                    'price': price,
                    'emoji': emoji,
                    'total': total,
                    'remaining': remaining
                })
            else:
                limited_gifts.append({
                    'id': gift_id,
                    'price': price,
                    'emoji': emoji,
                    'total': total,
                    'remaining': remaining
                })
        
        print(f"\n‚úÖ LIMITED gifts (will be shown): {len(limited_gifts)}")
        print(f"‚ùå UNLIMITED gifts (will be hidden): {len(unlimited_gifts)}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã
        print("\nüéÅ LIMITED GIFT EXAMPLES (first 10):")
        for gift in limited_gifts[:10]:
            print(f"  ‚Ä¢ {gift['emoji']} ID: {gift['id']} | "
                  f"{gift['price']}‚≠ê | {gift['remaining']}/{gift['total']}")
        
        if len(limited_gifts) > 10:
            print(f"  ... and {len(limited_gifts) - 10} more")
        
        print("\nüö´ UNLIMITED GIFT EXAMPLES (first 10):")
        for gift in unlimited_gifts[:10]:
            print(f"  ‚Ä¢ {gift['emoji']} ID: {gift['id']} | "
                  f"{gift['price']}‚≠ê | Unlimited")
        
        if len(unlimited_gifts) > 10:
            print(f"  ... and {len(unlimited_gifts) - 10} more")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ü–µ–Ω–∞–º
        if limited_gifts:
            limited_prices = [g['price'] for g in limited_gifts]
            print(f"\nüí∞ LIMITED GIFTS PRICE STATS:")
            print(f"  ‚Ä¢ Min: {min(limited_prices)}‚≠ê")
            print(f"  ‚Ä¢ Max: {max(limited_prices)}‚≠ê")
            print(f"  ‚Ä¢ Average: {sum(limited_prices) / len(limited_prices):.1f}‚≠ê")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é
        print(f"\nüß™ FILTER TEST:")
        test_gifts = all_gifts[:5]  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 5 –¥–ª—è —Ç–µ—Å—Ç–∞
        
        for gift in test_gifts:
            total = gift.get('total_count')
            remaining = gift.get('remaining_count')
            
            # –ü—Ä–∏–º–µ–Ω—è–µ–º –ª–æ–≥–∏–∫—É —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
            is_unlimited = total is None or remaining is None
            
            print(f"\nGift {gift.get('id')}:")
            print(f"  ‚Ä¢ total_count: {total}")
            print(f"  ‚Ä¢ remaining_count: {remaining}")
            print(f"  ‚Ä¢ Is unlimited? {is_unlimited}")
            print(f"  ‚Ä¢ Will be shown? {'NO ‚ùå' if is_unlimited else 'YES ‚úÖ'}")

if __name__ == "__main__":
    asyncio.run(test_gift_filtering())